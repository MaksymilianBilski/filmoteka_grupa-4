{"mappings":"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","sources":["src/js/pagination.js"],"sourcesContent":["// import { page, renderPost, totalPages } from '';\n// import { Notify } from 'notiflix';\nlet page = 50;\nlet totalPages = 100;\nlet actualPage = 1;\n\nconst pagination = document.querySelector('.pagination');\nconst paginationBox = document.querySelector('.pagination-box');\nconst dots = document.querySelector('.dots');\nconst arrowLeft = document.querySelector('.arrow-left');\nconst arrowRight = document.querySelector('.arrow-right');\nlet paginationButtons = document.querySelectorAll('.pagination-button');\n\npagination.style.display = 'flex';\npaginationBox.style.display = 'flex';\n\narrowLeft.addEventListener('click', () => {\n  pageBackward();\n});\narrowRight.addEventListener('click', () => {\n  pageForward();\n});\n\nstartState();\n\n//creating the start state in pagination\nfunction startState() {\n  //dots before last page + last page\n  pagination.insertAdjacentHTML('beforeend', `<span>...</span>`);\n  pagination.insertAdjacentHTML('beforeend', `<button>${totalPages}</button>`);\n  //creating frist 5 pages\n  for (let i = 5; i >= 1; i--) {\n    pagination.insertAdjacentHTML(\n      'afterbegin',\n      `<button class=\"pagination-button\" style=\"margin-left:2px;\">${i}</button>`\n    );\n  }\n}\n\n//creating the middle state of pagination\nfunction middleState() {\n  //loop by the value of total amount of pages.\n  for (let i = 0; i <= totalPages; i++) {\n    // condition for pages between: page 5 and page last-4\n    if (actualPage > 5 && page < totalPages - 4) {\n      // loop that makes pages in middle state( firstPage... thisLoopPages ...lastPage)\n      for (let i = actualPage + 2; i >= actualPage - 2; i--) {\n        pagination.insertAdjacentHTML(\n          'afterbegin',\n          `<button class=\"pagination-button\" style=\"margin-left:2px;\">${i}</button>`\n        );\n        if (actualPage > 5) {\n          console.log('cos');\n          pagination.insertAdjacentHTML('afterbegin', `<span>...</span>`);\n          pagination.insertAdjacentHTML('afterbegin', `<button>${1}</button>`);\n        }\n      }\n      // set the actualPage to middle element of 5 buttons\n      actualPage = pagination.children[2];\n    }\n  }\n}\n\n//moving all pages forward\nfunction pageForward() {\n  // set the page and actualPage for last page\n  actualPage = page = totalPages;\n  pagination.innerHTML = '';\n  dots.innerHTML = '';\n  // creating the last 5 pages\n  for (let i = totalPages - 4; i <= totalPages; i++) {\n    pagination.insertAdjacentHTML(\n      'beforeend',\n      `<button class=\"pagination-button\">${i}</button>`\n    );\n  }\n  //hide and show arrow\n  arrowRight.classList.add('hidden');\n  arrowLeft.classList.remove('hidden');\n  //insert first page and dots after it\n  pagination.insertAdjacentHTML('afterbegin', `<span>...</span>`);\n  pagination.insertAdjacentHTML('afterbegin', `<button>${1}</button>`);\n\n  // renderPost();\n}\n\n//moving all pages backward\nfunction pageBackward() {\n  // setting page and actual page to 1\n  actualPage = page = 1;\n  pagination.innerHTML = '';\n  dots.innerHTML = '';\n  // creating the first 5 elements\n  for (let i = 5; i >= 1; i--) {\n    pagination.insertAdjacentHTML(\n      'afterbegin',\n      `<button class=\"pagination-button\">${i}</button>`\n    );\n  }\n  // hide and show arrow\n  arrowLeft.classList.add('hidden');\n  arrowRight.classList.remove('hidden');\n  //insert dots at the end, and amount of total pages after it\n  pagination.insertAdjacentHTML('beforeend', `<span>...</span>`);\n  pagination.insertAdjacentHTML(\n    'beforeend',\n    `<button class=\"pagination-button\">${totalPages}</button>`\n  );\n  // renderPost();\n}\n\nfunction buttonClick(e) {\n  //setting page number to clicked button\n  page = actualPage = e.target.textContent;\n  pagination.innerHTML = '';\n  dots.innerHTML = '';\n  // dynamic creating of pages in middle state\n  if (actualPage >= 4 && actualPage <= totalPages - 4) {\n    // dots and first page at the begining if the actual page is bigger than 4\n    dots.innerHTML = `<span>...</span>`;\n    dots.insertAdjacentHTML(\n      'afterbegin',\n      `<button class=\"pagination-button\">${1}</button>`\n    );\n    // //dots and last page\n    pagination.insertAdjacentHTML(\n      'afterbegin',\n      `<button class=\"pagination-button\">${totalPages}</button>`\n    );\n    pagination.insertAdjacentHTML('afterbegin', `<span>...</span>`);\n    arrowRight.classList.remove('hidden');\n    arrowLeft.classList.remove('hidden');\n    arrowRight.classList.remove('hidden');\n  }\n  if (actualPage <= 4) {\n    dots.innerHTML = '';\n  }\n  if (actualPage <= 3) {\n    arrowLeft.classList.add('hidden');\n  }\n  if (actualPage >= totalPages - 3) {\n    arrowRight.classList.add('hidden');\n  }\n  // dynamic creating first 5 pages, and last 5 pages\n  for (let i = Number(actualPage) + 2; i >= Number(actualPage) - 2; i--) {\n    // first 5 pages condition\n    if (Number(actualPage) <= 3) {\n      pagination.insertAdjacentHTML('beforeend', `<span>...</span>`);\n      pagination.insertAdjacentHTML(\n        'beforeend',\n        `<button class=\"pagination-button\">${totalPages}</button>`\n      );\n      pageBackward();\n      return (page = actualPage = e.currentTarget.textContent);\n    }\n    // last 5 pages condition\n    if (Number(actualPage) >= totalPages - 3) {\n      pagination.insertAdjacentHTML('afterbegin', `<span>...</span>`);\n      pagination.insertAdjacentHTML(\n        'afterbegin',\n        `<button class=\"pagination-button\">${1}</button>`\n      );\n      pageForward();\n      return (page = actualPage = e.currentTarget.textContent);\n    }\n    pagination.insertAdjacentHTML(\n      'afterbegin',\n      `<button class=\"pagination-button\">${i}</button>`\n    );\n  }\n}\n\nfunction changeBtn(e) {\n  // if didnt clicked properly\n  if (e.target.nodeName !== 'BUTTON') {\n    return;\n  } //if there are some buttons, do a loop on this buttons and add eventlistener to it\n  else if (pagination.children.length > 0) {\n    for (let i = 0; i <= pagination.children.length - 1; i++) {\n      // !!TO DO!!\n      pagination.children[i].addEventListener('click', buttonClick);\n      dots.addEventListener('click', buttonClick);\n    }\n  } else return;\n}\n\npagination.addEventListener('click', changeBtn);\n\n//testing functions\nfunction testBtn() {\n  paginationBox.insertAdjacentHTML(\n    'afterbegin',\n    `<button class=\"test\">klik</button>`\n  );\n}\ntestBtn();\nconst tBtn = document.querySelector('.test');\ntBtn.addEventListener('click', () => {\n  console.log(actualPage);\n});\n// export { page };\n"],"names":["$dfaf77c789ce7a24$var$totalPages","$dfaf77c789ce7a24$var$actualPage","$dfaf77c789ce7a24$var$pagination","document","querySelector","$dfaf77c789ce7a24$var$paginationBox","$dfaf77c789ce7a24$var$dots","$dfaf77c789ce7a24$var$arrowLeft","$dfaf77c789ce7a24$var$arrowRight","querySelectorAll","$dfaf77c789ce7a24$var$pageForward","innerHTML","i","insertAdjacentHTML","concat","classList","add","remove","$dfaf77c789ce7a24$var$pageBackward","$dfaf77c789ce7a24$var$buttonClick","e","target","textContent","Number","currentTarget","style","display","addEventListener","$dfaf77c789ce7a24$var$startState","nodeName","children","length","console","log"],"version":3,"file":"index.fd93a25f.js.map"}